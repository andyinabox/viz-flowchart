const t=(t,e)=>e(t)+e.bandwidth()/2,e=(t,e)=>{let s,a;for(s=0;s<e.length;s++)if(e[s].id===t){a=s;break}return a},s=(s,a,n)=>{const r=e(s,a);return t(r,n)},a=(t,e)=>{t.classed("hidden-step",(t,s)=>s>e)},n=(t,e)=>{t.classed("action-button",(t,s)=>t.action&&s===e+1).classed("hidden-step",(t,s)=>s>e+1)},r=t=>{t.on("click",(function(t){select(this).classed("action-button")&&t.action(t)}))},{scaleBand:i,scaleOrdinal:l,range:c,create:o,select:d,path:p,schemeDark2:h}=window.d3,m={width:800,circleRadius:15,marginTop:0,marginBottom:0,marginLeft:10,marginRight:10,stepHeight:120,flowArrowSize:10,stepDescArrowSize:13};class g extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const{actors:t,steps:e}=(t=>{const e={},s=Array.prototype.slice.call(t);return e.actors=s.filter(t=>"viz-actor"===t.tagName.toLowerCase()).map(t=>({id:t.id,title:t.innerHTML.trim()})),e.steps=s.filter(t=>"viz-step"===t.tagName.toLowerCase()).map(t=>({from:t.getAttribute("from"),to:t.getAttribute("to"),desc:t.innerHTML.trim()})),e})(this.children);this.shadowRoot.innerHTML="\n<style>\nsvg {\n  width: 100%;\n  stroke-width: 1px;\n  font-family: var(--main-font-family, 'Open Sans', Helvetica, Arial, sans-serif);\n}\n\n.actor-box {\n  /* fill: #ddd; */\n  opacity: 0.5;\n  /* stroke: black; */\n}\n\n.actor-line {\n  stroke: #ddd;\n  stroke-width: 1px;\n}\n\n.actor-text {\n  fill: black;\n  text-align: center;\n  font-size: 0.75rem;\n  height: 0.75rem;\n}\n\n.hidden-step {\n  transition: fill 200ms, stroke 200ms, opacity 200ms;\n}\n\n.step-line {\n  /* stroke: black; */\n  fill: none;\n  stroke-width: 2px;\n}\n\n.step-line.hidden-step {\n  stroke: #ccc\n}\n\n/* .step-circle { */\n  /* stroke: black; */\n  /* opacity: 0.5; */\n/* } */\n\n.step-circle.hidden-step {\n  fill: white;\n  stroke: #ccc;\n}\n\n.step-number {\n  font-family: 'Open Sans', Helvetica, Arial, sans-serif;\n  fill: white;\n  line-height: 30px;\n}\n\n.step-number.hidden-step {\n  fill: #ccc;\n}\n\n.step-desc {\n  fill: black;\n}\n\n.step-desc.hidden-step {\n  fill: #ccc;\n}\n\n.step-desc.action-button {\n  fill: white;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.step-desc-bg {\n  /* fill: white; */\n  opacity: 0.5;\n}\n\n.step-desc-bg.hidden-step {\n  opacity: 0;\n  /* fill: none; */\n}\n\n.step-desc-bg.action-button {\n  opacity: 1;\n  fill: black;\n  cursor: pointer;\n}\n</style>\n<div class=\"viz-container\"></div>\n";const s=this.shadowRoot.querySelector(".viz-container");Object.assign(this,{el:s,actors:t,steps:e}),this.options=Object.assign({},m),this.setup()}static get observedAttributes(){return["step"]}attributeChangedCallback(){this.update()}connectedCallback(){this.update()}setup(){const{el:t,steps:e,actors:s}=this,{stepHeight:a,marginBottom:n,marginTop:r,width:d}=this.options,p=.66*a,m=a/7,g=e.length*a+2*p+r+n;Object.assign(this.options,{actorHeight:p,stepDescFontSize:m,height:g});const b=t.getAttribute("step")||e.length-1;this.currentStep=parseInt(b),this.actorsScale=i().domain(c(s.length)).range([0,d]).padding(.25),this.stepsScale=i().domain(c(e.length)).range([1.5*a+r,g]),this.colorScale=l(h);const f=o("svg");f.attr("width",d).attr("height",g).attr("viewBox",`0 0 ${d} ${g}`),t.appendChild(f.node()),this.svg=f,this.createActors(),this.updateSteps()}createActors(){const{marginTop:e,actorHeight:s,height:a,marginBottom:n}=this.options,{svg:r,actors:i,actorsScale:l,colorScale:c}=this,o=e,d=r.append("g").attr("class","actors");d.append("g").attr("class","actor-boxes").selectAll(".actor-box").data(i).enter().append("rect").attr("class","actor-box").attr("height",s).attr("width",l.bandwidth()).attr("fill",(t,e)=>c(e)).attr("x",(t,e)=>l(e)).attr("y",o),d.append("g").attr("class","actor-texts").selectAll(".actor-text").data(i).enter().append("text").attr("class","actor-text").attr("x",(e,s)=>t(s,l)).attr("y",o+s/2).attr("dominant-baseline","middle").attr("text-anchor","middle").text(t=>t.title),d.append("g").attr("class","actor-lines").selectAll(".actor-line").data(i).enter().append("line").attr("class","actor-line").attr("x1",(e,s)=>t(s,l)).attr("x2",(e,s)=>t(s,l)).attr("y1",o+s).attr("y2",a-n-s).text(t=>t.title),d.append("g").attr("class","actor-boxes").selectAll(".actor-box").data(i).enter().append("rect").attr("class","actor-box").attr("height",s).attr("width",l.bandwidth()).attr("fill",(t,e)=>c(e)).attr("x",(t,e)=>l(e)).attr("y",a-n-s),d.append("g").attr("class","actor-texts").selectAll(".actor-text").data(i).enter().append("text").attr("class","actor-text").attr("x",(e,s)=>t(s,l)).attr("y",a-n-s/2).attr("dominant-baseline","middle").attr("text-anchor","middle").text(t=>t.title)}updateSteps(){const{svg:t,actors:i,steps:l,actorsScale:c,stepsScale:o,currentStep:d,colorScale:h}=this,{flowArrowSize:m,circleRadius:g,stepDescFontSize:b}=this.options,f=t.append("g").attr("class","steps"),u=t=>s(t.from,i,c),x=t=>s(t.to,i,c),w=(t,e)=>o(e),v=t=>t.to===t.from,S=(t,s)=>{const a=p(),n=e(t.from,i),r=e(t.to,i);return n===r?a.arc(u(t),o(s),o.bandwidth(),Math.PI/2,3*Math.PI/2):(a.moveTo(u(t),o(s)),a.lineTo(x(t),o(s))),n<r?(a.moveTo(x(t)-m,o(s)-m/2),a.lineTo(x(t),o(s)),a.lineTo(x(t)-m,o(s)+m/2)):r<n&&(a.moveTo(x(t)+m,o(s)-m/2),a.lineTo(x(t),o(s)),a.lineTo(x(t)+m,o(s)+m/2)),a.toString()};f.append("g").attr("class","step-lines").selectAll(".step-line").data(l).join(t=>t.append("path").attr("class","step-line").classed("step-line-loop",t=>v(t)).classed("step-line-normal",t=>!v(t)).call(a,d).attr("stroke",t=>h(e(t.from,i))).attr("d",S),t=>t.call(a,d),t=>t.remove()),f.append("g").attr("class","step-circles").selectAll(".step-circle").data(l).join(t=>t.append("circle").attr("class","step-circle").call(a,d).attr("fill",t=>h(e(t.from,i))).attr("r",g).attr("cx",u).attr("cy",w),t=>t.call(a,d),t=>t.remove()),f.append("g").attr("class","step-numbers").selectAll(".step-number").data(l).join(t=>t.append("text").attr("class","step-number").call(a,d).style("font-size",`${1.2*g}px`).attr("x",u).attr("y",(t,e)=>o(e)+2).text((t,e)=>e+1).attr("dominant-baseline","middle").attr("text-anchor","middle"),t=>t.call(a,d),t=>t.remove()),f.append("g").attr("class","step-desc-bgs").selectAll(".step-desc-bg").data(l).join(t=>t.append("path").attr("class","step-desc-bg").call(n,d).call(this.drawStepDescriptionBox.bind(this)).attr("fill",t=>h(e(t.from,i))),t=>t.call(n,d),t=>t.remove()),f.append("g").attr("class","step-descs").selectAll(".step-desc").data(l).join(e=>e.append("text").attr("class","step-desc").style("font-size",b+"px").call(n,d).call(r).attr("x",t.attr("width")/2).attr("y",(t,e)=>o(e)-o.bandwidth()/2).text(t=>t.desc).attr("dominant-baseline","middle").attr("text-anchor","middle"),t=>t.call(n,d).call(r),t=>t.remove())}drawStepDescriptionBox(t){const{actors:e,actorsScale:a,stepsScale:n}=this,{stepDescArrowSize:r,stepDescFontSize:i,marginRight:l,marginLeft:c,width:o}=this.options;t.attr("d",(t,d)=>{const h=p(),m=n(d)-n.bandwidth()/2-i,g=m+2*i,b=s(t.from,e,a);return h.moveTo(c,m),h.lineTo(o-l,m),h.lineTo(o-l,g),h.lineTo(b+r/2,g),h.lineTo(b,g+r),h.lineTo(b-r/2,g),h.lineTo(c,g),h.closePath(),h.toString()})}update(){this.updateSteps()}}class b extends HTMLElement{constructor(){super()}static get observedAttributes(){return["from","to"]}}class f extends HTMLElement{constructor(){super()}static get observedAttributes(){return["id","title"]}}customElements.define("viz-actor",b),customElements.define("viz-step",f),customElements.define("viz-flowchart",g);
//# sourceMappingURL=viz-flowchart.module.js.map
